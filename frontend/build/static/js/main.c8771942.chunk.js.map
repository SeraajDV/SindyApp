{"version":3,"sources":["Components/NavBar.js","Components/Favourites.js","Components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Nav","className","href","Favourites","props","favouriteList","Table","map","item","link","src","img","alt","trackName","title","id","SearchBar","useState","setFavouriteList","input","setInput","catagory","setCatagory","data","setData","handleSubmit","e","a","preventDefault","fetch","response","json","results","console","log","onSubmit","type","value","onChange","target","artworkUrl100","Button","color","size","onClick","result","previewUrl","artistName","arr","push","addToFavourite","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAoBeA,MAhBf,WACE,OACE,iCACE,cAACC,EAAA,EAAD,CAAKC,UAAU,SAAf,SAEE,mBAAGC,KAAK,IAAID,UAAU,QAAtB,SACE,gCACE,oDADF,c,wDCsBKE,G,MA5BI,SAACC,GACjB,IAAQC,EAAkBD,EAAlBC,cAET,OACE,gCACE,oBAAIJ,UAAU,aAAd,wBACA,cAACK,EAAA,EAAD,UACE,gCACE,6BACGD,EAAcE,KAAI,SAAAC,GACjB,OACE,8BACE,oBAAiBN,KAAMM,EAAKC,KAA5B,UACE,+BACG,qBAAKR,UAAU,WAAWS,IAAKF,EAAKG,IAAKC,IAAKJ,EAAKK,YADtD,OAGA,oBAAIZ,UAAU,WAAd,SAA0BO,EAAKM,QAJjC,MAAQN,EAAKO,oB,QC6EhBC,MAxFf,WACE,MAA0CC,mBAAS,IAAnD,mBAAOZ,EAAP,KAAsBa,EAAtB,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAgCH,mBAAS,OAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAwBL,mBAAS,IAAjC,mBAAOM,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,yDACnBD,EAAEE,iBADiB,SAGJ,KAAVT,EAHc,iCAIQU,MAAM,kCAAD,OAAmCR,IAJhD,cAITS,EAJS,gBAKOA,EAASC,OALhB,OAKTC,EALS,OAMfC,QAAQC,IAAIF,GACZR,EAAQQ,GAPO,yCASQH,MAAM,gCAAD,OAAiCV,EAAjC,YAA0CE,IATvD,eASTS,EATS,iBAUOA,EAASC,OAVhB,QAUTC,EAVS,OAWfC,QAAQC,IAAIF,GACZR,EAAQQ,GAZO,0DAejBC,QAAQC,IAAR,MAfiB,0DAAH,sDAiClB,OACE,sBAAKjC,UAAU,MAAf,UACE,uBAAMkC,SAAUV,EAAcxB,UAAU,YAAxC,UACE,uBAAOA,UAAU,WAAWmC,KAAK,OAAOC,MAAOlB,EAAOmB,SAAU,SAAAZ,GAAC,OAAIN,EAASM,EAAEa,OAAOF,UACvF,yBAAQpC,UAAU,QAAQoC,MAAOhB,EAAUiB,SAAU,SAAAZ,GAAC,OAAIJ,EAAYI,EAAEa,OAAOF,QAA/E,UACE,wBAAQA,MAAM,MAAd,iBADF,IAEE,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,wBACA,wBAAQA,MAAM,SAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,QAAd,sBAEF,wBAAQpC,UAAU,SAASmC,KAAK,SAAhC,uBAGDb,EACC,6BACE,qBAAKtB,UAAU,oBAAf,SACCsB,EAAKhB,KAAI,SAAAC,GAAI,OACZ,sBAAKP,UAAU,cAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgCO,EAAKK,YACjC,qBAAKZ,UAAU,eAAf,SACE,qBACEA,UAAU,QACVS,IAAKF,EAAKgC,cACV5B,IAAKJ,EAAKK,cANtB,IASQ,8BACF,cAAC4B,EAAA,EAAD,CACEC,MAAM,kBACNC,KAAK,KACLC,QAAS,kBAjDJ,SAACC,GACtB,IAAIrC,EAAO,CACTO,GAAI8B,EAAO9B,GACXN,KAAMoC,EAAOC,WACbhC,MAAO+B,EAAOE,WACdpC,IAAKkC,EAAOL,eAEVQ,EAAG,YAAO3C,GACd2C,EAAIC,KAAKzC,GACTU,EAAiB8B,GAEjBf,QAAQC,IAAI7B,GAsCmB6C,CAAe1C,IAHhC,uCAWT,KACH,cAAC,EAAD,CAAYH,cAAeA,QCrElB8C,MAbf,WACE,OACE,qBAAKlD,UAAU,MAAf,SACE,eAAC,IAAD,eACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOmD,KAAK,IAAIC,OAAK,EAACC,UAAWtC,YCA5BuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c8771942.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Nav } from \"react-bootstrap\";\r\nimport \"../App.css\"; //import the stylesheet, react and Nav from bootstrap\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <header>\r\n      <Nav className=\"navbar\">\r\n        {/*---Logo icon image --- */}\r\n        <a href=\"/\" className=\"brand\">\r\n          <div >\r\n            <h2> iTunes Search API</h2> {/*When clicking on this header it will return you to the default page*/}\r\n          </div>\r\n        </a>\r\n      </Nav>\r\n      \r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavBar; //export NavBar component","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\"; //import the table style from bootstrap and import react\r\nimport '../favourite.css'; //import the style sheet for the favourites page\r\n\r\nconst Favourites = (props) => {\r\n   const { favouriteList } = props;\r\n\r\n  return (\r\n    <div >\r\n      <h3 className=\"favHeading\" >Favourites</h3>\r\n      <Table>\r\n        <tbody>\r\n          <tr>\r\n            {favouriteList.map(item => { //map through the data that has been saved in the favourite list\r\n              return (\r\n                <div>\r\n                  <a key={item.id} href={item.link}>\r\n                    <td>\r\n                       <img className=\"favImage\" src={item.img} alt={item.trackName}/> {/*display the image of the item that has been saved to the favourite list */}\r\n                    </td>\r\n                    <td className=\"favTitle\">{item.title}</td> {/*display the title of the item that has been saved to the favourite list */}\r\n                  </a>\r\n                </div>\r\n              );\r\n            })}\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favourites; //export the favourite component","import React, { useState } from 'react';\r\nimport '../search.css';\r\nimport Favourites from './Favourites';\r\nimport { Button } from \"react-bootstrap\"; // import react, favourites component, button from bootstrap and search stylesheet\r\n\r\nfunction SearchBar() {//created states for favouriteList, input, catagory and data\r\n  const [favouriteList, setFavouriteList] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [catagory, setCatagory] = useState(\"all\");\r\n  const [data, setData] = useState([]);\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault(); //Create a function to search for the information the user choosed \r\n    try{\r\n      if(input === ''){\r\n        const response = await fetch(`http://localhost:8080/search/a/${catagory}`);\r\n        const results = await response.json();// if the user only chose a catagory it will search for everything and give 25 results\r\n        console.log(results)\r\n        setData(results);\r\n      }else {\r\n        const response = await fetch(`http://localhost:8080/search/${input}/${catagory}`);\r\n        const results = await response.json();  \r\n        console.log(results) //when the user gives a specified title and choose a catagory it will display 25 reults with the input of the user\r\n        setData(results);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  \r\n  const addToFavourite = (result) => { //Create a function for the favouriteList to save items that were chose as favourites\r\n    let item = { //These are the information that will be saved from the items and pushed to the favouriteList\r\n      id: result.id,\r\n      link: result.previewUrl,\r\n      title: result.artistName,\r\n      img: result.artworkUrl100\r\n    };\r\n    let arr = [...favouriteList]\r\n    arr.push(item)\r\n    setFavouriteList(arr);\r\n    \r\n    console.log(favouriteList); //log the information to the console\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={handleSubmit} className=\"searchBar\">\r\n        <input className=\"inputBox\" type=\"text\" value={input} onChange={e => setInput(e.target.value)}/>\r\n        <select className=\"genre\" value={catagory} onChange={e => setCatagory(e.target.value)}>\r\n          <option value=\"all\">All</option> {/*inserted all the options for the catagory */}\r\n          <option value=\"movie\">Movie</option>\r\n          <option value=\"podcast\">Podcast</option>\r\n          <option value=\"music\">Music</option>\r\n          <option value=\"audiobook\">Audiobook</option>\r\n          <option value=\"shortFilm\">Short Film</option>\r\n          <option value=\"tvShow\">Tv show</option>\r\n          <option value=\"software\">Software</option>\r\n          <option value=\"ebook\">Ebook</option>\r\n        </select>\r\n        <button className=\"button\" type=\"submit\">Search</button>\r\n      </form>\r\n\r\n      {data ? (\r\n        <ul>\r\n          <div className=\"results-container\">{/*mapped through the data that was fetch */}\r\n          {data.map(item => ( \r\n            <div className=\"result-item\">\r\n                <h6 className=\"image-username\">{item.trackName}</h6>\r\n                    <div className=\"image-wraper\">\r\n                      <img\r\n                        className=\"image\"\r\n                        src={item.artworkUrl100}\r\n                        alt={item.trackName}\r\n                      />\r\n                    </div> {/*the images and names of the items would be display. Under the items the add to favourites button is placed*/}\r\n                    <div>\r\n                  <Button\r\n                    color=\"outline-success\"\r\n                    size=\"sm\"\r\n                    onClick={() => addToFavourite(item)}>\r\n                    addToFavorite\r\n                  </Button>\r\n                </div>\r\n            </div>\r\n          ))}\r\n          </div>\r\n        </ul>\r\n      ): null}\r\n      <Favourites favouriteList={favouriteList} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar; //export the searchBar component","import React from 'react'; //import react\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"; //import BrowserRoute, Router, Switch and route\nimport NavBar from \"./Components/NavBar\"; //import NavBar and SearchBar component\nimport SearchBar from './Components/SearchBar';\nimport './App.css'; //import stylesheet\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router> {/*used Router, NavBar, Switch and Route*/}\n        <NavBar />\n        <Switch>\n          <Route path=\"/\" exact component={SearchBar} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App; //export the App component\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}